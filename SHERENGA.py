n = input() # ВВОД СТРОКИ, НЕ СПИСКА
rost = input() #ВВОД РОСТА ВВИДЕ СТРОКОВОГО ТИПА ДАННЫЙ
z = n + " " +rost # СЛОЖЕНИЕ СТРОК
print(z) # ВЫВОД ОБЪЕДИНЕННЫХ СТРОК ДЛЯ СОБСТВЕННОЙ ПРОВЕРКИ
a = [int(s) for s in z.split()] # ПЕРЕНОС СТРОКИ В "int" в ЧИСЛОВОЙ ТИП ДАННЫХ В СПИСОК ПОД НАЗВАНИЕМ "a"
print(a) # ВЫВОД СПИСКА НА ПЕЧАТЬ ДЛЯ ПРОВЕРКИ
b = sorted(a) # Сортировка списка методом "sorted" по возрастанию
print(b) #вывод отсортированного списка для собственной проверки
c = list(reversed(b)) # разворот списка в обратной последовательности, теперь список будет по убыванию
print(c) # вывод развернутого списка, для проверки правильности работы
print(list(reversed(sorted([int(s) for s in (n + " " +rost).split()])))) # теперь начали собирать "c" в обратной последовательности, т.е. c = list(reversed(b)) и т д
mesto = 0 # добавляем условную величину, которую потом заменим нужным нам индексом
for i in range(len(c)): # создаем цикл проверки для "c" списка
    if int(rost) == c[i]: # если рост равняется элементу списка, следовательно
        print(i + 1)  # вывод индекса +1, (+1 т.к. индексация начинается с нуля)
        mesto = i + 1 # вносим наш индекс в переменную
    print(c[i])
print(mesto) # выводим переменную 

#a = [int(s) for s in input().split()]
#rost = int(input())
#print(a)
#a1 = a.insert(rost)
#print(a1)
#b = sorted(a)
#print(b)
#c = list(reversed(b))
#print(c, b)
#d = a.append(10)
#print(d)